type Global @entity {
  id: ID!
  gameFactory: Bytes!
}

type Game @entity {
  id: ID!
  classesAddress: Bytes!
  itemsAddress: Bytes!
  experienceAddress: Bytes!
  eligibilityAdapter: Bytes!
  classlevelAdapter: Bytes!
  uri: String!
  owners: [Bytes!]!
  masters: [Bytes!]!
  characters: [Character!]! @derivedFrom(field: "game")
  classes: [Class!]! @derivedFrom(field: "game")
  items: [Item!]! @derivedFrom(field: "game")
  experience: BigInt!
  createdBy: Bytes!
  createdAt: BigInt!
}

type Character @entity {
  id: ID!
  characterId: BigInt!
  account: Bytes!
  player: Bytes!
  uri: String!
  game: Game!
  jailed: Boolean!
  removed: Boolean!
  experience: BigInt!
  heldItems: [HeldItem!]! @derivedFrom(field: "character")
  heldClasses: [HeldClass!]! @derivedFrom(field: "character")
  equippedItems: [EquippedItem!]! @derivedFrom(field: "character")
  createdAt: BigInt!
  createdBy: Bytes!
}

type Class @entity {
  id: ID!
  game: Game!
  classId: BigInt!
  uri: String!
  holders: [HeldClass!]! @derivedFrom(field: "classEntity")
}

type Item @entity {
  id: ID!
  game: Game!
  itemId: BigInt!
  uri: String!
  soulbound: Boolean!
  supply: BigInt!
  supplied: BigInt!
  totalSupply: BigInt!
  merkleRoot: Bytes!
  requirements: [ItemRequirement!]! @derivedFrom(field: "item")
  holders: [HeldItem!]! @derivedFrom(field: "item")
  equippers: [EquippedItem!]! @derivedFrom(field: "item")
}

type ClassRequirement @entity {
  id: ID!
  item: Item!
  requiredClass: Class!
}

enum AssetCategory @entity {
  ERC20
  ERC721
  ERC1155
}

type ItemRequirement @entity {
  id: ID!
  item: Item!
  assetCategory: AssetCategory!
  assetAddress: Bytes!
  assetId: BigInt!
  amount: BigInt!
}

type HeldItem @entity {
  id: ID!
  character: Character!
  item: Item!
  amount: BigInt!
}

type HeldClass @entity {
  id: ID!
  character: Character!
  classEntity: Class!
  amount: BigInt!
}

type EquippedItem @entity {
  id: ID!
  character: Character!
  item: Item!
  heldItem: HeldItem!
}
